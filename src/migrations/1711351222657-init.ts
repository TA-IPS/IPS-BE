import { MigrationInterface, QueryRunner } from "typeorm";

export class Init1711351222657 implements MigrationInterface {
    name = 'Init1711351222657'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "fingerprint" ("id" SERIAL NOT NULL, "attempt" integer NOT NULL, "x" integer NOT NULL, "y" integer NOT NULL, "z" integer NOT NULL, "ap1" double precision, "ap2" double precision, "ap3" double precision, "ap4" double precision, "ap5" double precision, "ap6" double precision, "ap7" double precision, "ap8" double precision, "ap9" double precision, "ap10" double precision, "ap11" double precision, "ap12" double precision, "ap13" double precision, "ap14" double precision, "ap15" double precision, "ap16" double precision, "ap17" double precision, "ap18" double precision, "ap19" double precision, "ap20" double precision, "ap21" double precision, "ap22" double precision, "ap23" double precision, "ap24" double precision, "ap25" double precision, "ap26" double precision, "ap27" double precision, "ap28" double precision, "ap29" double precision, "ap30" double precision, "ap31" double precision, "ap32" double precision, "ap33" double precision, "ap34" double precision, "ap35" double precision, "ap36" double precision, "ap37" double precision, "ap38" double precision, "ap39" double precision, "ap40" double precision, "ap41" double precision, "ap42" double precision, "ap43" double precision, "ap44" double precision, "ap45" double precision, "ap46" double precision, "ap47" double precision, "ap48" double precision, "ap49" double precision, "ap50" double precision, "ap51" double precision, "ap52" double precision, "ap53" double precision, "ap54" double precision, "ap55" double precision, "ap56" double precision, "ap57" double precision, "ap58" double precision, "ap59" double precision, "ap60" double precision, "ap61" double precision, "ap62" double precision, "ap63" double precision, "ap64" double precision, "ap65" double precision, "ap66" double precision, "ap67" double precision, "ap68" double precision, "ap69" double precision, "ap70" double precision, "ap71" double precision, "ap72" double precision, "ap73" double precision, "ap74" double precision, "ap75" double precision, "ap76" double precision, "ap77" double precision, "ap78" double precision, "ap79" double precision, "ap80" double precision, "ap81" double precision, "ap82" double precision, "ap83" double precision, "ap84" double precision, "ap85" double precision, "ap86" double precision, "ap87" double precision, "ap88" double precision, "ap89" double precision, "ap90" double precision, "ap91" double precision, "ap92" double precision, "ap93" double precision, "ap94" double precision, "ap95" double precision, "ap96" double precision, "ap97" double precision, "ap98" double precision, "ap99" double precision, "ap100" double precision, "ap101" double precision, "ap102" double precision, "ap103" double precision, "ap104" double precision, "ap105" double precision, "ap106" double precision, "ap107" double precision, "ap108" double precision, "ap109" double precision, "ap110" double precision, "ap111" double precision, "ap112" double precision, "ap113" double precision, "ap114" double precision, "ap115" double precision, "ap116" double precision, "ap117" double precision, "ap118" double precision, "ap119" double precision, "ap120" double precision, "ap121" double precision, "ap122" double precision, "ap123" double precision, "ap124" double precision, "ap125" double precision, "ap126" double precision, "ap127" double precision, "ap128" double precision, "ap129" double precision, "ap130" double precision, "ap131" double precision, "ap132" double precision, "ap133" double precision, "ap134" double precision, "ap135" double precision, "ap136" double precision, "ap137" double precision, "ap138" double precision, "ap139" double precision, "ap140" double precision, CONSTRAINT "PK_8f1c3d8326a0907d1c7a5961f32" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "bssid" ("bssid" character varying(32) NOT NULL, "ssid" character varying(32) NOT NULL, CONSTRAINT "PK_9193e9d4d3b5c151b1cac5e7f58" PRIMARY KEY ("bssid"))`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP TABLE "bssid"`);
        await queryRunner.query(`DROP TABLE "fingerprint"`);
    }

}
